//(6).Write menu driven program to implement simple queue.
//(1)insert (2)delete (3)modify (4)display
#include<stdio.h>
void main()
{
   void insert(int *,int *,int [],int);
   void deleteq(int *,int *,int []);
   void modify(int *,int *,int [],int,int);
   void display(int *,int *,int []);
   int que[10],f=-1,r=-1,ele,newele;
   int *front=&f,*rear=&r;
   clrscr();

   printf("1 insert\n");
   printf("2 delete\n");
   printf("3 modify\n");
   printf("4 display\n");
   printf("5 Exit\n");

   while(1)
   {
      int c;
      printf("Select The Choice::");
      scanf("%d",&c);
      switch(c)
      {
	 case 1:printf("Enter Element=");
		scanf("%d",&ele);
		insert(front,rear,que,ele);
		break;
	 case 2:deleteq(front,rear,que);
		break;
	 case 3:printf("Enter the change value=");
		scanf("%d",&ele);
		printf("Enter the new value=");
		scanf("%d",&newele);
		modify(front,rear,que,ele,newele);
		break;
	 case 4:display(front,rear,que);
		break;
	 case 5:exit(0);
		break;
      }
   }

   getch();
}

//insert method
void insert(int *front,int *rear,int que[],int ele)
{
   if(*rear==9)
   {
      printf("Que Is Full.!!\n");
   }
   else if(*front==-1 && *rear==-1)
   {
      *front=*rear=0;
      que[*rear]=ele;
      printf("Que Rear Element is %d\n",que[*rear]);
   }
   else
   {
      *rear+=1;
      que[*rear]=ele;
      printf("Que Rear Element is %d\n",que[*rear]);
   }
}

//delete method
void deleteq(int *front,int *rear,int que[])
{
   if(*front==-1)
   {
      printf("Que Is Empty.!!\n");
   }
   else if(*front==*rear)
   {
      printf("Que Is Underflow.!!\n");
      *front=*rear=-1;
   }
   else
   {
      printf("Que remove Element is %d\n",que[*front]);
      *front+=1;
   }
}

//modify method
void modify(int *front,int *rear,int que[],int ele,int newele)
{
   if(*front==-1)
   {
      printf("Que is empty.!!\n");
   }
   else
   {
      int i;
      for(i=*front;i<=*rear;i++)
      {
	 if(que[i]==ele)
	 {
	    que[i]=newele;
	    break;
	 }
      }
      if(i>*rear)
      {
	 printf("Not Available %d.!!\n");
      }
   }
}

//display method
void display(int *front,int *rear,int que[])
{
   if(*front==-1)
   {
      printf("Que is empty.!!\n");
   }
   else
   {
      int i;
      for(i=*front;i<=*rear;i++)
      {
	 printf("%d,",que[i]);
      }
      printf("\n");
   }
}
